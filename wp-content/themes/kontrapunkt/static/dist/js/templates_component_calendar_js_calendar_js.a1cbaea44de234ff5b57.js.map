{"version":3,"file":"templates_component_calendar_js_calendar_js.a1cbaea44de234ff5b57.js","mappings":";;;;;;;;;;;;;AAA8C;AACI;AACF;AAEhD,MAAMG,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;AACtD,MAAMC,YAAY,GAAGJ,6DAAa,CAACC,UAAU,EAAE;EAC7CI,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAG,IAAIR,wDAAQ,CAACG,UAAU,EAAE;EACxCM,OAAO,EAAE,CAAER,6DAAa,CAAE;EAC1BS,QAAQ,EAAE,KAAK;EACfH,MAAM,EAAED,YAAY,CAACC,MAAM;EAC3BI,YAAY,EAAE,OAAO;EACrBC,eAAe,EAAE;IACfC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE;EACZ,CAAC;EACDC,eAAe,EAAE,IAAI;EACrBC,WAAW,EAAE,cAAc;EAC3BC,WAAW,EAAE,YAAY;EACzBC,MAAM,EAAE,IAAI;EACZC,aAAa,EAAE;IACbC,IAAI,EAAE,OAAO;IACbC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,UAAU,EAAE,SAAS;EACrBC,cAAc,EAAE;AAElB,CAAC,CAAC;AACFjB,QAAQ,CAACkB,MAAM,CAAC,CAAC;;;;;;;;;;;;;;AChCV,MAAMxB,aAAa,GAAGA,CAACyB,OAAO,EAAEC,aAAa,KAAK;EACvD,IAAI,CAACD,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CAAE,kCAAiC,CAAC;EACrD;EAEA,MAAMC,IAAI,GAAG,CAAC,CAAC;EAEf,KAAK,MAAMC,GAAG,IAAIJ,OAAO,CAACK,OAAO,EAAE;IACjC,IAAID,GAAG,IAAIH,aAAa,EAAE;MACxB,MAAMK,KAAK,GAAGN,OAAO,CAACK,OAAO,CAACD,GAAG,CAAC;MAClC,IAAIG,WAAW,GAAGD,KAAK;;MAEvB;MACA,IAAI;QACFC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;MACjC,CAAC,CAAC,OAAOI,CAAC,EAAE,CAAC;;MAEb;MACA,IAAI,OAAOT,aAAa,CAACG,GAAG,CAAC,KAAK,OAAOG,WAAW,EAAE;QACpDJ,IAAI,CAACC,GAAG,CAAC,GAAGG,WAAW;MACzB,CAAC,MAAM;QACL,MAAM,IAAIL,KAAK,CAAE,4CAA2CE,GAAI,EAAC,CAAC;MACpE;IACF;EACF;;EAEA;EACA,KAAK,MAAMA,GAAG,IAAIH,aAAa,EAAE;IAC/B,IAAI,EAAEG,GAAG,IAAID,IAAI,CAAC,EAAE;MAClB,MAAM,IAAID,KAAK,CAAE,sBAAqBE,GAAI,uBAAsB,CAAC;IACnE;EACF;EAEA,OAAOD,IAAI;AACb,CAAC","sources":["webpack://static_base/./templates/component/calendar/js/calendar.js","webpack://static_base/./templates/component/calendar/js/useGetDataset.js"],"sourcesContent":["import { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { useGetDataset } from './useGetDataset';\n\nconst calendarEl = document.getElementById('calendar');\nconst calendarData = useGetDataset(calendarEl, {\n  events: [],\n});\n\nconst calendar = new Calendar(calendarEl, {\n  plugins: [ dayGridPlugin ],\n  navLinks: false,\n  events: calendarData.events,\n  eventDisplay: 'block',\n  eventTimeFormat: {\n    hour: '2-digit',\n    minute: '2-digit',\n    meridiem: false\n  },\n  displayEventEnd: true,\n  initialView: 'dayGridMonth',\n  initialDate: '2022-06-01',\n  locale: 'cs',\n  headerToolbar: {\n    left: 'title',\n    center: '',\n    right: 'prev,next',\n  },\n  eventColor: '#ffcc02',\n  eventTextColor: '#000',\n\n});\ncalendar.render();\n","export const useGetDataset = (element, dataContainer) => {\n  if (!element) {\n    throw new Error(`useGetDataset: Element not found`);\n  }\n\n  const data = {};\n\n  for (const key in element.dataset) {\n    if (key in dataContainer) {\n      const value = element.dataset[key];\n      let parsedValue = value;\n\n      // Try to parse value as JSON if possible\n      try {\n        parsedValue = JSON.parse(value);\n      } catch (e) {}\n\n      // Check if the value type matches the dataContainer\n      if (typeof dataContainer[key] === typeof parsedValue) {\n        data[key] = parsedValue;\n      } else {\n        throw new Error(`useGetDataset: Invalid data type for key ${key}`);\n      }\n    }\n  }\n\n  // Check if any keys are missing from the dataset\n  for (const key in dataContainer) {\n    if (!(key in data)) {\n      throw new Error(`useGetDataset: Key ${key} not found in dataset`);\n    }\n  }\n\n  return data;\n};\n"],"names":["Calendar","dayGridPlugin","useGetDataset","calendarEl","document","getElementById","calendarData","events","calendar","plugins","navLinks","eventDisplay","eventTimeFormat","hour","minute","meridiem","displayEventEnd","initialView","initialDate","locale","headerToolbar","left","center","right","eventColor","eventTextColor","render","element","dataContainer","Error","data","key","dataset","value","parsedValue","JSON","parse","e"],"sourceRoot":""}